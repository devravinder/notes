
select * from deleted


SELECT getDate()

--- audit add procedure
CREATE PROCEDURE add_audit
		@aud_id nvarchar(50),
		@aud_recid nvarchar(50),
		@aud_table nvarchar(50),
		@aud_field nvarchar(50),
		@aud_oldvalue nvarchar(MAX),
		@aud_newvalue nvarchar(MAX),
		@aud_domain nvarchar(50),
		@aud_createdby nvarchar(50)---,
		---@aud_createddt datetime2
 AS
   INSERT INTO audit_trail VALUES
   			(	@aud_id, @aud_recid, @aud_table, @aud_field,
   				@aud_oldvalue,@aud_newvalue,@aud_domain,@aud_createdby,getDate())
   				
----usage

 EXECUTE add_audit
 
 		@aud_id =ADE0323011192357167632,
		@aud_recid =CTE032301119222839639,
		@aud_table =atp_mstr,
		@aud_field =ctry_country,
		@aud_oldvalue =Eu,
		@aud_newvalue= Europe,
		@aud_domain =d001,
		@aud_createdby =U001

		
	drop PROCEDURE add_audit

	---------------------triggers-------------------
-------------------------------------------------------------

	
	-----------ref  https://stackoverflow.com/questions/3181305/trigger-insert-old-values-values-that-was-updated
create table Employees (id int identity, Name varchar(50), Password varchar(50))
create table Log (id int identity, EmployeeId int, LogDate datetime, 
    OldName varchar(50))
go
create trigger Employees_Trigger_Update on Employees
after update
as
insert into Log (EmployeeId, LogDate, OldName) 
select id, getdate(), name
from deleted
go
insert into Employees (Name, Password) values ('Zaphoid', '6')
insert into Employees (Name, Password) values ('Beeblebox', '7')
update Employees set Name = 'Ford' where id = 1
select * from Log

------------------------------------------

create TRIGGER division_mstr_updated on division_mstr
	after UPDATE
  As
SELECT d.div_id, d.div_name,dv.div_id, dv.div_name from deleted d, division_mstr dv where d.div_id=dv.div_id

drop TRIGGER division_mstr_updated

UPDATE division_mstr set div_name='mVBRI-4' WHERE div_id='DV003'

-----------------------------


Declare @sql varchar(max) = ''
declare @tablename as varchar(255) = 'division_mstr'

select @sql = @sql + 'select [' + c.name + '],count(*) as ''' + c.name +  ''' from [' + t.name + '] group by [' + c.name + '] order by 2 desc; ' 
from sys.columns c
inner join sys.tables t on c.object_id = t.object_id
where t.name = @tablename

EXEC (@sql)


